{"version":3,"sources":["components/GridCube.jsx","components/Grid.jsx","components/astar.js","components/Header.jsx","App.js","reportWebVitals.js","index.js"],"names":["GridCube","props","useState","type","setType","useContext","CursorContext","cursorState","setCursorState","setSloc","SlocContext","setDloc","DlocContext","handleDragOver","event","target","style","backgroundColor","id","className","color","onDragOver","onClick","Grid","grid_list","i","l","j","push","toString","map","item","index","inner_item","inner_index","drawPath","p","document","getElementById","astar","sloc","dloc","smallest","m","length","f","split","closed","open","g","h","parseInt","checkinOpen","temp","checkinClosed","q","splice","dx","dy","flag","k","Math","sqrt","pow","Header","textAlign","preventDefault","alert","x","console","log","innerHTML","createContext","App","Provider","value","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.c3ede453.chunk.js","sourcesContent":["import React, { useContext, useState } from \"react\";\r\nimport { CursorContext, DlocContext, SlocContext } from \"../App\";\r\n\r\nexport default function GridCube(props){\r\n    const [type,setType] = useState(props.type);\r\n    const {cursorState, setCursorState} = useContext(CursorContext);\r\n    const {setSloc} = useContext(SlocContext); \r\n    const {setDloc} = useContext(DlocContext);\r\n    const handleDragOver = (event)=>{\r\n        if(type === \"source\" || type === \"destination\"){\r\n            return;\r\n        }\r\n        event.target.style.backgroundColor = \"black\";\r\n        setType(\"wall\");\r\n    }\r\n\r\n    const handleClick = (event)=>{\r\n        if(cursorState === \"source\"){\r\n            event.target.style.backgroundColor = \"green\";\r\n            setType(\"source\");\r\n            setSloc(event.target.id);\r\n            setCursorState(\"destination\");\r\n            return;\r\n        }\r\n        if(cursorState === \"destination\"){\r\n            event.target.style.backgroundColor = \"red\";\r\n            setType(\"destination\");\r\n            setDloc(event.target.id);\r\n            setCursorState(\"blank\");\r\n            return;\r\n        }\r\n        handleDragOver(event);\r\n    }\r\n\r\n\r\n    // eslint-disable-next-line no-useless-concat\r\n    return <div \r\n            id = {props.id} \r\n            type={type} \r\n            className={\"gridCube \"+props.color} \r\n            onDragOver={handleDragOver} \r\n            onClick={handleClick}\r\n        />\r\n}","import React from \"react\";\r\nimport GridCube from \"./GridCube\";\r\n\r\nexport default function Grid(){\r\n\r\n    const grid_list = [];\r\n    for (let i = 0; i < 20; i++) {\r\n        let l = [];\r\n        for (let j = 0; j < 40; j++) {\r\n            let color = \"white\";\r\n            let type = \"blank\";\r\n            l.push({\r\n                id: i.toString()+\" \"+j.toString(),\r\n                color: color,\r\n                type: type\r\n            });\r\n        }\r\n        grid_list.push(l);\r\n    }\r\n\r\n\r\n    return <div className=\"grid\">\r\n        {grid_list.map((item, index)=>{\r\n            return <div className=\"gridOut\" key={index}>\r\n                {item.map((inner_item, inner_index)=>{\r\n                \r\n                    return <GridCube\r\n                        id = {inner_item.id.toString()} \r\n                        key={inner_index} \r\n                        color={inner_item.color} \r\n                        type={inner_item.type}\r\n                    />\r\n                })}\r\n                </div>\r\n        })}\r\n    </div>\r\n}","\r\nfunction drawPath(item){\r\n    if(item.p === null){\r\n        return;\r\n    }\r\n    document.getElementById((item.id[0]).toString()+\" \"+(item.id[1]).toString()).style.backgroundColor = \"blue\";\r\n    drawPath(item.p);\r\n}\r\n\r\nexport default function astar(sloc, dloc){\r\n    sloc = sloc.split(\" \");\r\n    dloc = dloc.split(\" \");\r\n    function smallest(l) {\r\n        let m = 2000;\r\n        let id = -1;\r\n        for(let i = 0; i<l.length; i++){\r\n            if(l[i].f <= m){\r\n                m = l[i].f;\r\n                id = i;\r\n            }\r\n        }\r\n        return id;\r\n       }\r\n    // graph = [];\r\n    // for(let i = 0; i < 20;i++){\r\n    //     let t = []\r\n    //     for(let j =0;j<40;j++){\r\n            \r\n    //     }\r\n    // }\r\n    var closed = [];\r\n    var open = [{f: 0, g:0, h:0, id: [parseInt(sloc[0]),parseInt(sloc[1])],p:null}];\r\n\r\n    function checkinOpen(temp){\r\n        for(let i = 0; i<open.length; i++){\r\n            if(open[i].id === temp.id && open[i].f < temp.f)\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    function checkinClosed(temp){\r\n        for(let i = 0;i <closed.length; i++){\r\n            if(closed[i].id === temp.id && closed[i].f < temp.f){\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    while(open.length !== 0){\r\n        var id = smallest(open);\r\n        var q = open[id];\r\n        open.splice(id, 1);\r\n        var dx = [0,0,1,1,1,-1,-1,-1];\r\n        var dy = [1,-1,0,1,-1,0,1,-1];\r\n        let flag = false;\r\n        let temp = null;\r\n        for(let k = 0; k<8; k++){\r\n            if(q.id[0]+dx[k]<0 || q.id[0]+dx[k]>=20 || q.id[1]+dy[k]<0 || q.id[1]+dy[k]>=40)\r\n            continue;\r\n            \r\n            if(document.getElementById((q.id[0]+dx[k]).toString()+\" \"+(q.id[1]+dy[k]).toString()).style.backgroundColor === \"black\")\r\n            continue;\r\n            \r\n            let g = q.g + 1;\r\n            let h = Math.sqrt(Math.pow(q.id[0]+dx[k] - parseInt(dloc[0]), 2) + Math.pow(q.id[1]+dy[k] - parseInt(dloc[1]),2));\r\n            temp = {f: g+h, g: g, h:h, id: [q.id[0]+dx[k], q.id[1]+dy[k]], p: q};\r\n            \r\n            if(q.id[0]+dx[k] === parseInt(dloc[0]) && q.id[1]+dy[k] === parseInt(dloc[1])){    \r\n                flag = true;\r\n                break;\r\n            }\r\n            else if(checkinOpen(temp)){\r\n                continue;\r\n            }\r\n            else if(checkinClosed(temp)){\r\n                continue;\r\n            }\r\n            else{\r\n                if(q.id[0]+dx[k]!==parseInt(sloc[0]) && q.id[1] + dy[k]!== parseInt(sloc[1]))\r\n                    document.getElementById((q.id[0]+dx[k]).toString()+\" \"+(q.id[1]+dy[k]).toString()).style.backgroundColor = \"orange\";\r\n                open.push(temp);\r\n            }\r\n        }\r\n        \r\n        closed.push(q);\r\n        if(flag === true){\r\n            closed.push(temp);\r\n            break;\r\n        }\r\n    }\r\n\r\n    drawPath(closed[closed.length - 1].p);\r\n\r\n    return closed;\r\n}","import React, { useContext } from 'react';\r\nimport { CursorContext, DlocContext, SlocContext } from '../App';\r\nimport astar from './astar';\r\nexport default function Header(){\r\n\r\n    const {cursorState, setCursorState} = useContext(CursorContext);\r\n    const {sloc} = useContext(SlocContext);\r\n    const {dloc} = useContext(DlocContext);\r\n    const handleFind = (event)=>{\r\n        event.preventDefault();\r\n        if(cursorState === \"source\" || cursorState === \"destination\"){\r\n            alert(\"Set both source and destination\")\r\n        }\r\n        else{\r\n            var x = astar(sloc, dloc);\r\n            console.log(x);\r\n        }\r\n    }\r\n\r\n    const handleReset = (event)=>{\r\n        event.preventDefault();\r\n        for(let i = 0; i < 20; i++){\r\n            for(let j = 0; j < 40; j++){\r\n                document.getElementById(i.toString()+\" \"+j.toString()).style.backgroundColor = \"white\";\r\n            }\r\n        }\r\n        setCursorState(\"source\");\r\n        document.getElementById(\"res\").innerHTML = \"\";\r\n    }\r\n\r\n    return <div style={{textAlign:\"center\"}}>\r\n        <br/>\r\n        <button onClick={handleFind}>Find Path</button>\r\n        <button onClick={handleReset}>Reset</button>\r\n        <p id=\"res\"></p>\r\n    </div>\r\n}","import React, { createContext, useState } from \"react\";\nimport Grid from \"./components/Grid\";\nimport Header from \"./components/Header\";\n\nexport let CursorContext = createContext();\nexport let SlocContext = createContext();\nexport let DlocContext = createContext();\nfunction App() {\n\n  const [cursorState, setCursorState] = useState(\"source\");\n  const [sloc,setSloc] = useState(\"\");\n  const [dloc, setDloc] = useState(\"\");\n  return (\n    <CursorContext.Provider value = {{cursorState, setCursorState}}>\n    <SlocContext.Provider value = {{sloc, setSloc}}>\n    <DlocContext.Provider value = {{dloc, setDloc}}>\n    <div className=\"App\">\n      <Header />\n      <Grid />\n    </div>\n    </DlocContext.Provider>\n    </SlocContext.Provider>\n    </CursorContext.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"./styles.css\";\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}